---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: validate-and-create-ee
spec:
  params:
    - name: ee-config
      description: Path to execution environment definition file
      type: string
      default: "execution-environment.yml"
    - name: context-dir
      description: Directory to store the execution environment context
      type: string
      default: "context"
  workspaces:
    - name: source
      description: The workspace containing the EE definition and where context will be created
  steps:
    - name: validate-schema
      image: ghcr.io/ansible/community-ansible-dev-tools:v24.12.0
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e
        
        echo "Validating execution environment definition schema..."
        ansible-builder validate $(params.ee-config)
        
        if [ $? -eq 0 ]; then
          echo "Schema validation successful!"
        else
          echo "Schema validation failed!"
          exit 1
        fi
    
    - name: create-context
      image: ghcr.io/ansible/community-ansible-dev-tools:v24.12.0
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/bash
        set -e
        
        echo "Creating execution environment context..."
        ansible-builder create $(params.ee-config) --container-runtime=podman --tag=temp-ee:latest --context=$(params.context-dir)
        
        echo "Context creation complete!"

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-and-push-ee
spec:
  params:
    - name: context-dir
      description: Directory containing the execution environment context
      type: string
      default: "context"
    - name: image-name
      description: Name of the image to build
      type: string
    - name: image-tag
      description: Tag of the image to build
      type: string
      default: "latest"
    - name: registry
      description: Registry to push the image to
      type: string
      default: "quay.io"
    - name: registry-user
      description: Username for registry authentication
      type: string
    - name: registry-token
      description: Token for registry authentication
      type: string
  workspaces:
    - name: source
      description: The workspace containing the EE context
  steps:
    - name: build-and-push
      image: ghcr.io/ansible/community-ansible-dev-tools:v24.12.0
      workingDir: $(workspaces.source.path)
      securityContext:
        privileged: true
      script: |
        #!/bin/bash
        set -e
        
        # Login to the registry
        echo "Logging in to $(params.registry)..."
        podman login -u $(params.registry-user) -p $(params.registry-token) $(params.registry)
        
        # Build the image from the context
        echo "Building image from context..."
        cd $(params.context-dir)
        podman build -t $(params.registry)/$(params.image-name):$(params.image-tag) .
        
        # Push the image
        echo "Pushing image to registry..."
        podman push $(params.registry)/$(params.image-name):$(params.image-tag)
        
        echo "Build and push complete!"

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ansible-ee-pipeline
spec:
  workspaces:
    - name: shared-workspace
      description: Workspace for source code and build artifacts
  params:
    - name: ee-config
      description: Path to execution environment definition file
      type: string
      default: "execution-environment.yml"
    - name: context-dir
      description: Directory to store the execution environment context
      type: string
      default: "context"
    - name: image-name
      description: Name of the image to build
      type: string
    - name: image-tag
      description: Tag of the image to build
      type: string
      default: "latest"
    - name: registry
      description: Registry to push the image to
      type: string
      default: "quay.io"
    - name: registry-user
      description: Username for registry authentication
      type: string
    - name: registry-token
      description: Token for registry authentication
      type: string
  tasks:
    - name: validate-and-create
      taskRef:
        name: validate-and-create-ee
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: ee-config
          value: $(params.ee-config)
        - name: context-dir
          value: $(params.context-dir)
    
    - name: build-and-push
      taskRef:
        name: build-and-push-ee
      runAfter:
        - validate-and-create
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: context-dir
          value: $(params.context-dir)
        - name: image-name
          value: $(params.image-name)
        - name: image-tag
          value: $(params.image-tag)
        - name: registry
          value: $(params.registry)
        - name: registry-user
          value: $(params.registry-user)
        - name: registry-token
          value: $(params.registry-token)

---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: ansible-ee-pipeline-run
spec:
  pipelineRef:
    name: ansible-ee-pipeline
  workspaces:
    - name: shared-workspace
      persistentVolumeClaim:
        claimName: ansible-ee-workspace-pvc
  params:
    - name: ee-config
      value: "execution-environment.yml"
    - name: context-dir
      value: "context"
    - name: image-name
      value: "your-org/your-ee-name"  # Replace with your image name
    - name: image-tag
      value: "latest"
    - name: registry
      value: "quay.io"
    - name: registry-user
      value: "your-registry-username"  # Replace with your registry username
    - name: registry-token
      value: "your-registry-token"     # Replace with your registry token or use a Secret

---
# PVC for the workspace
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ansible-ee-workspace-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi